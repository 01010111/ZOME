// Generated by Haxe 4.0.0-preview.5+7eb789f
(function ($global) { "use strict";
var $estr = function() { return js_Boot.__string_rec(this,''); },$hxEnums = $hxEnums || {},$_;
function $extend(from, fields) {
	var proto = Object.create(from);
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}var App = function() {
	App.i = this;
	this.init_panels();
	this.init_tools();
	this.init_buttons();
	this.show_entities();
};
App.__name__ = true;
App.main = function() {
	new App();
};
App.prototype = {
	init_panels: function() {
		this.layers = window.document.getElementById("layers");
		this.levels = window.document.getElementById("levels");
		this.tools = window.document.getElementById("tools");
		this.tiles = window.document.getElementById("tiles");
		this.entities = window.document.getElementById("entities");
		this.inspector = window.document.getElementById("inspector");
		var _g = 0;
		while(_g < 32) {
			var i = _g++;
			this.add_layer_to_layers("Layer Name",Math.random() > 0.5 ? EContext.TILE : EContext.ENTITY);
		}
	}
	,init_tools: function() {
		var _gthis = this;
		this.tool_cursor = window.document.getElementById("icon_cursor");
		this.tool_pencil = window.document.getElementById("icon_pencil");
		this.tool_eraser = window.document.getElementById("icon_eraser");
		this.tool_bucket = window.document.getElementById("icon_bucket");
		var tool = this.tool_cursor;
		tool.onclick = function(e) {
			_gthis.select_tool(tool);
			return;
		};
		var tool1 = this.tool_pencil;
		tool1.onclick = function(e1) {
			_gthis.select_tool(tool1);
			return;
		};
		var tool2 = this.tool_eraser;
		tool2.onclick = function(e2) {
			_gthis.select_tool(tool2);
			return;
		};
		var tool3 = this.tool_bucket;
		tool3.onclick = function(e3) {
			_gthis.select_tool(tool3);
			return;
		};
		this.select_tool(this.tool_cursor);
	}
	,select_tool: function(tool) {
		if(this.current_tool == tool) {
			return;
		}
		switch(tool.id) {
		case "icon_bucket":
			this.tool = ETool.BUCKET;
			break;
		case "icon_cursor":
			this.tool = ETool.CURSOR;
			break;
		case "icon_eraser":
			this.tool = ETool.ERASER;
			break;
		case "icon_pencil":
			this.tool = ETool.PENCIL;
			break;
		default:
			return;
		}
		if(this.current_tool != null) {
			this.current_tool.classList.remove("selected");
		}
		this.current_tool = tool;
		this.current_tool.classList.add("selected");
	}
	,init_buttons: function() {
		var _gthis = this;
		this.btn_add_layer = window.document.getElementById("add_layer");
		this.btn_add_level = window.document.getElementById("add_level");
		this.btn_add_layer.onclick = function(e) {
			_gthis.add_layer();
			return;
		};
		this.btn_add_level.onclick = function(e1) {
			_gthis.add_level();
			return;
		};
	}
	,add_layer: function() {
	}
	,add_layer_to_layers: function(name,context) {
		var win = this.layers.getElementsByClassName("window")[0];
		win.appendChild(new LayerPanel(context,name).element);
	}
	,add_level: function() {
	}
	,show_entities: function() {
		this.context = EContext.ENTITY;
		this.tiles.hidden = true;
		this.entities.hidden = false;
		this.tool_bucket.hidden = true;
		this.tool_cursor.hidden = false;
		if(this.tool_bucket == this.current_tool) {
			this.select_tool(this.tool_pencil);
		}
	}
	,__class__: App
};
var LayerPanel = function(context,name) {
	this.context = context;
	this.name = name;
	this.create_element();
	this.create_icon();
	this.create_text();
};
LayerPanel.__name__ = true;
LayerPanel.prototype = {
	create_element: function() {
		this.element = window.document.createElement("div");
		this.element.classList.add("layer_panel");
		this.element.classList.add("window_panel");
	}
	,create_icon: function() {
		this.icon = window.document.createElement("img");
		var tmp;
		switch(this.context._hx_index) {
		case 0:
			tmp = "icons/icon_tiles.svg";
			break;
		case 1:
			tmp = "icons/icon_objects.svg";
			break;
		}
		this.icon.src = tmp;
		this.icon.classList.add("layer_icon");
		this.element.appendChild(this.icon);
	}
	,create_text: function() {
		this.text = window.document.createElement("p");
		this.text.innerText = this.name;
		this.text.classList.add("layer_name");
		this.element.appendChild(this.text);
	}
	,__class__: LayerPanel
};
var EContext = $hxEnums["EContext"] = { __ename__ : true, __constructs__ : ["TILE","ENTITY"]
	,TILE: {_hx_index:0,__enum__:"EContext",toString:$estr}
	,ENTITY: {_hx_index:1,__enum__:"EContext",toString:$estr}
};
var ETool = $hxEnums["ETool"] = { __ename__ : true, __constructs__ : ["CURSOR","PENCIL","ERASER","BUCKET"]
	,CURSOR: {_hx_index:0,__enum__:"ETool",toString:$estr}
	,PENCIL: {_hx_index:1,__enum__:"ETool",toString:$estr}
	,ERASER: {_hx_index:2,__enum__:"ETool",toString:$estr}
	,BUCKET: {_hx_index:3,__enum__:"ETool",toString:$estr}
};
Math.__name__ = true;
var js__$Boot_HaxeError = function(val) {
	Error.call(this);
	this.val = val;
	if(Error.captureStackTrace) {
		Error.captureStackTrace(this,js__$Boot_HaxeError);
	}
};
js__$Boot_HaxeError.__name__ = true;
js__$Boot_HaxeError.__super__ = Error;
js__$Boot_HaxeError.prototype = $extend(Error.prototype,{
	__class__: js__$Boot_HaxeError
});
var js_Boot = function() { };
js_Boot.__name__ = true;
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o.__enum__) {
			var e = $hxEnums[o.__enum__];
			var n = e.__constructs__[o._hx_index];
			var con = e[n];
			if(con.__params__) {
				s += "\t";
				var tmp = n + "(";
				var _g = [];
				var _g1 = 0;
				var _g2 = con.__params__;
				while(_g1 < _g2.length) {
					var p = _g2[_g1];
					++_g1;
					_g.push(js_Boot.__string_rec(o[p],s));
				}
				return tmp + _g.join(",") + ")";
			} else {
				return n;
			}
		}
		if((o instanceof Array)) {
			var l = o.length;
			var i;
			var str = "[";
			s += "\t";
			var _g3 = 0;
			var _g11 = l;
			while(_g3 < _g11) {
				var i1 = _g3++;
				str += (i1 > 0 ? "," : "") + js_Boot.__string_rec(o[i1],s);
			}
			str += "]";
			return str;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e1 ) {
			var e2 = (e1 instanceof js__$Boot_HaxeError) ? e1.val : e1;
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var k = null;
		var str1 = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		for( var k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str1.length != 2) {
			str1 += ", \n";
		}
		str1 += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str1 += "\n" + s + "}";
		return str1;
	case "string":
		return o;
	default:
		return String(o);
	}
};
String.prototype.__class__ = String;
String.__name__ = true;
Array.__name__ = true;
Object.defineProperty(js__$Boot_HaxeError.prototype,"message",{ get : function() {
	return String(this.val);
}});
App.main();
})(typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);

//# sourceMappingURL=app.js.map